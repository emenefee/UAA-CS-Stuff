#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/stat.h>


size_t str_len (const char *str)
{
    for (size_t len = 0;;++len) if (str[len]==0) return len;
}

void printStuff(char *msg) // using your own print for documented char *s
{
    write(1, msg, str_len(msg));
}

void printData(char *buffer, int len) // give buffer & len from read
{
  write(1, buffer, len);
}

int getBytes(int fd, int start)
{
  bool done = false;
  int byteCount = start;
  int readItem = 0;
  char buffer[1];
  char *val2 = "\n";
  char *val3 = "\0";

  while(!done)
  {
    read(fd, buffer, 1); // read returns the NEXT byte
    char *val = buffer;
    if(*val == *val2 || *val == *val3 || buffer == EOF)
      done = true;
    byteCount++;
  }
  return byteCount;
}

int main()
{
    int startByte = 0;
    int fd = open("nanpa",O_RDONLY);
    int endByte = getBytes(fd, 0);
    //printf("Output: %d\n", endByte);

    //lseek(fd, startByte, SEEK_SET);
    char buffer[endByte - startByte];
    read(fd, buffer, endByte - startByte);
    char *output = buffer;
    printStuff(output);
    

    startByte = endByte + 1;
    endByte = getBytes(fd, startByte);
    //printf("Output: %d\n", endByte);

    //lseek(fd, startByte, SEEK_SET);
    buffer[endByte - startByte];
    read(fd, buffer, endByte - startByte);
    *output = buffer;
    printStuff(output);

    startByte = endByte + 1;
    endByte = getBytes(fd, startByte);
    //printf("Output: %d\n", endByte);

    //lseek(fd, startByte, SEEK_SET);
    buffer[endByte - startByte];
    read(fd, buffer, endByte - startByte);
    *output = buffer;
    printStuff(output);

    return 0;

}


start here

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/stat.h>


size_t str_len (const char *str)
{
    for (size_t len = 0;;++len) if (str[len]==0) return len;
}

void MandEsPrint(char *msg)
{
    int sizeI = str_len(msg);
    write(STDOUT_FILENO,msg,sizeI);
    char *msg2 = "\n";
    sizeI = str_len(msg2);
    write(STDOUT_FILENO,msg2,sizeI);
}

int foo(int fd, int start)
{
    int ct = start;
    int answer = 0;
    char buffer[1];
   while (1)
   {
       //lseek(fd, ct, SEEK_SET);
       answer = read(fd, buffer, 1);
       char *val = buffer;
       char *val2 = "\n";
       if (*val == *val2 || buffer == '\0')
       {
           return ct;
       }
       ct++;
   }
}

int main()
{
    int cuurrentPlace = 0;
    int fd = open("nanpa",O_RDONLY);
    int theAnswer = foo(fd, 0);
    printf("Output: %d\n", theAnswer);

    lseek(fd, cuurrentPlace, SEEK_SET);
    char buffer[theAnswer - cuurrentPlace];
    read(fd, buffer, theAnswer - cuurrentPlace);
    char *output = buffer;
    MandEsPrint(output);
    

    cuurrentPlace = theAnswer + 1;
    theAnswer = foo(fd, cuurrentPlace);
    printf("Output: %d\n", theAnswer);

    lseek(fd, cuurrentPlace, SEEK_SET);
    char buffer2[theAnswer - cuurrentPlace];
    read(fd, buffer2, theAnswer - cuurrentPlace);
    char *output2 = buffer2;
    MandEsPrint(output2);

    return 0;
}